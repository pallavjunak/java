import java.util.HashMap;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.ListIterator;
import java.util.Spliterator;
import java.util.Enumeration;
import java.util.Collections;
/**
* Below code describes how different way we can iterate an ArrayList.
**/

class ArrayListIteration{
	public static void main(String[] argc){

		ArrayList<String> aList = new ArrayList<String>();
		aList.add("java");
		aList.add("C#");
		aList.add("C++");
		aList.add("Python");

		//Using for loop
		System.out.println("\nUsing For Loop");
		for(int i=0;i<aList.size();i++)
			System.out.println(aList.get(i));
		
		//using for each
		System.out.println("\nUsing For Each(Adv. for loop)");
		for(String s:aList)
			System.out.println(s);


		//using while
		System.out.println("\nUsing While loop");
		int count =0;
		while(aList.size() > count){
			System.out.println(aList.get(count));
			count ++;
		}

		//using Iterator
		System.out.println("\nUsing Iterator Interface");
		Iterator itr = aList.iterator();
		while(itr.hasNext())
			System.out.println(itr.next());

		//using ListIterator
		System.out.println("\nUsing List Iterator");
		ListIterator<String> li = aList.listIterator();
		while(li.hasNext())
			System.out.println(li.next());


		//Treversing Backward using ListIterator
		System.out.println("\nTreversing Backward Using List Iterator");
		while(li.hasPrevious())
			System.out.println(li.previous());

		
		//using Spliterator
		System.out.println("\nUsing Spliterator(java v1.8)");
		Spliterator<String> si = aList.spliterator();
		si.forEachRemaining(System.out::println);			

		//using lambda
		System.out.println("\nUsing lambda(->) Expression (java v1.8)");
		aList.forEach((v)-> {
			System.out.println(v);
		});


		//using enumeration
		System.out.println("\nUsing Enumeration");
		Enumeration<String> e = Collections.enumeration(aList);
		while(e.hasMoreElements())
			System.out.println(e.nextElement());
	}
}
